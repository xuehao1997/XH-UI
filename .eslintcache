[{"E:\\family-work\\SxdUI\\react-ui\\src\\index.tsx":"1","E:\\family-work\\SxdUI\\react-ui\\src\\store\\index.js":"2","E:\\family-work\\SxdUI\\react-ui\\src\\site\\index.tsx":"3","E:\\family-work\\SxdUI\\react-ui\\src\\store\\items.js":"4","E:\\family-work\\SxdUI\\react-ui\\src\\store\\screenWidth.js":"5","E:\\family-work\\SxdUI\\react-ui\\src\\site\\router\\index.js":"6","E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\index.tsx":"7","E:\\family-work\\SxdUI\\react-ui\\src\\site\\router\\routes.js":"8","E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\SiderBar.tsx":"9","E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\header.tsx":"10","E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\footer.tsx":"11","E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\hooks\\useScreenWidth.tsx":"12","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\updateItems2.tsx":"13","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Divider.tsx":"14","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Button.tsx":"15","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Select.tsx":"16","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Input.tsx":"17","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\updateItems.tsx":"18","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Grid.tsx":"19","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Table.tsx":"20","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Icon.tsx":"21","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Checkbox.tsx":"22","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Radio.tsx":"23","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\item.tsx":"24","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Button\\button.tsx":"25","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Icon\\index.tsx":"26","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Checkbox\\index.tsx":"27","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Divider\\index.tsx":"28","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Select\\index.tsx":"29","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\index.tsx":"30","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Table\\index.tsx":"31","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Grid\\index.tsx":"32","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Input\\index.tsx":"33","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demoList.tsx":"34","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Grid\\hook.tsx":"35","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\index.tsx":"36","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\Preview.tsx":"37","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\Code.tsx":"38","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\Introduce.tsx":"39"},{"size":781,"mtime":1649947749630,"results":"40","hashOfConfig":"41"},{"size":199,"mtime":1649947749643,"results":"42","hashOfConfig":"41"},{"size":325,"mtime":1649947749635,"results":"43","hashOfConfig":"41"},{"size":345,"mtime":1649947749643,"results":"44","hashOfConfig":"41"},{"size":252,"mtime":1649947749644,"results":"45","hashOfConfig":"41"},{"size":759,"mtime":1649947749642,"results":"46","hashOfConfig":"41"},{"size":1050,"mtime":1649947749638,"results":"47","hashOfConfig":"41"},{"size":2208,"mtime":1649947749642,"results":"48","hashOfConfig":"41"},{"size":2179,"mtime":1649947749636,"results":"49","hashOfConfig":"41"},{"size":836,"mtime":1649947749636,"results":"50","hashOfConfig":"41"},{"size":227,"mtime":1649947749636,"results":"51","hashOfConfig":"41"},{"size":786,"mtime":1649947749637,"results":"52","hashOfConfig":"41"},{"size":857,"mtime":1649947749642,"results":"53","hashOfConfig":"41"},{"size":5776,"mtime":1649947749639,"results":"54","hashOfConfig":"41"},{"size":10917,"mtime":1649952951008,"results":"55","hashOfConfig":"41"},{"size":4509,"mtime":1649947749641,"results":"56","hashOfConfig":"41"},{"size":8198,"mtime":1649947749640,"results":"57","hashOfConfig":"41"},{"size":889,"mtime":1649947749641,"results":"58","hashOfConfig":"41"},{"size":22738,"mtime":1649947749639,"results":"59","hashOfConfig":"41"},{"size":3987,"mtime":1649947749641,"results":"60","hashOfConfig":"41"},{"size":29486,"mtime":1649947749640,"results":"61","hashOfConfig":"41"},{"size":9638,"mtime":1649947749639,"results":"62","hashOfConfig":"41"},{"size":4509,"mtime":1649947749641,"results":"63","hashOfConfig":"41"},{"size":870,"mtime":1649947749634,"results":"64","hashOfConfig":"41"},{"size":1713,"mtime":1649947749618,"results":"65","hashOfConfig":"41"},{"size":880,"mtime":1649947749621,"results":"66","hashOfConfig":"41"},{"size":4704,"mtime":1649947749619,"results":"67","hashOfConfig":"41"},{"size":827,"mtime":1649947749620,"results":"68","hashOfConfig":"41"},{"size":7938,"mtime":1649947749624,"results":"69","hashOfConfig":"41"},{"size":541,"mtime":1649947749634,"results":"70","hashOfConfig":"41"},{"size":1258,"mtime":1649947749624,"results":"71","hashOfConfig":"41"},{"size":3165,"mtime":1649947749621,"results":"72","hashOfConfig":"41"},{"size":6553,"mtime":1649947749622,"results":"73","hashOfConfig":"41"},{"size":2881,"mtime":1649947749633,"results":"74","hashOfConfig":"41"},{"size":3949,"mtime":1649947749620,"results":"75","hashOfConfig":"41"},{"size":848,"mtime":1649947749633,"results":"76","hashOfConfig":"41"},{"size":276,"mtime":1649947749633,"results":"77","hashOfConfig":"41"},{"size":574,"mtime":1649947749632,"results":"78","hashOfConfig":"41"},{"size":868,"mtime":1649947749632,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ll7r75",{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\family-work\\SxdUI\\react-ui\\src\\index.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\store\\index.js",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\index.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\store\\items.js",[],"E:\\family-work\\SxdUI\\react-ui\\src\\store\\screenWidth.js",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\router\\index.js",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\index.tsx",["172","173"],"import React,{useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport useScreenWidth from './hooks/useScreenWidth'\r\nimport Header from './header'\r\nimport SiderBar from './SiderBar'\r\nimport Footer from './footer'\r\nimport {ILayoutProps} from '../interface/site'\r\nconst Layout:React.FC<ILayoutProps> = (props:ILayoutProps)=>{\r\n    const { children } = props\r\n    const showSiderBar = useScreenWidth()\r\n    const hide = {\r\n        display:\"none\",\r\n        padding:\"50px 0 50px 0\"\r\n    }\r\n    const show = {\r\n        display:\"block\",\r\n        padding:\"50px 0 50px 20%\"\r\n    }\r\n    const dynStyle = showSiderBar?show:hide\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Header/>\r\n            <div className=\"main container\">\r\n                <SiderBar style={{display:dynStyle.display}}/>\r\n                <div className=\"contentbar\" style={{padding:dynStyle.padding}}>\r\n                    {children}\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Layout","E:\\family-work\\SxdUI\\react-ui\\src\\site\\router\\routes.js",["174","175"],"import ButtonPage from '../pages/Button'\r\nimport SelectPage from '../pages/Select'\r\nimport InputPage from '../pages/Input'\r\nimport IconPage from '../pages/Icon'\r\nimport GridPage from '../pages/Grid'\r\nimport DividerPage from '../pages/Divider'\r\nimport CheckboxPage from '../pages/Checkbox'\r\nimport RadioPage from '../pages/Radio'\r\nimport TablePage from '../pages/Table'\r\nimport ItemList from '../pages/updateItems'\r\nimport ItemList2 from '../pages/updateItems2'\r\nexport default [\r\n    {\r\n      text:\"通用\",\r\n      children:[\r\n        {\r\n          id:1,\r\n          text:\"button 按钮\",\r\n          path:\"/button\",\r\n          component:ButtonPage\r\n        },\r\n        {\r\n          id:2,\r\n          text:\"Icon 图标\",\r\n          path:\"/icon\",\r\n          component:IconPage\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      text:\"布局\",\r\n      children:[\r\n        {\r\n          id:34,\r\n          text:\"Divider 分割线\",\r\n          path:\"/divider\",\r\n          component:DividerPage\r\n        },\r\n        {\r\n          id:4,\r\n          text:\"Grid 栅格\",\r\n          path:\"/grid\",\r\n          component:GridPage\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      text:\"数据录入\",\r\n      children:[\r\n        {\r\n          id:5,\r\n          text:\"Select 选择器\",\r\n          path:\"/select\",\r\n          component:SelectPage\r\n        },\r\n        {\r\n          id:6,\r\n          text:\"Checkbox 多选框\",\r\n          path:\"/checkbox\",\r\n          component:CheckboxPage\r\n        },\r\n\r\n        {\r\n          id:7,\r\n          text:\"Input 输入框\",\r\n          path:\"/input\",\r\n          component:InputPage\r\n        },\r\n       \r\n      ]\r\n    },\r\n    {\r\n      text:\"数据展示\",\r\n      children:[\r\n        {\r\n          id:9,\r\n          text:\"Table 表格\",\r\n          path:\"/table\",\r\n          component:TablePage\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      text:\"ItemList\",\r\n      children:[\r\n        {\r\n          id:10,\r\n          text:\"ItemList\",\r\n          path:\"/ItemList\",\r\n          component:ItemList\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      text:\"ItemList2\",\r\n      children:[\r\n        {\r\n          id:10,\r\n          text:\"ItemList2\",\r\n          path:\"/ItemList2\",\r\n          component:ItemList2\r\n        }\r\n      ]\r\n    },\r\n]","E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\SiderBar.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\header.tsx",["176","177"],"import React from 'react';\r\nimport Icon from \"../../components/Icon\"\r\nimport logo from \"../../logo.png\"\r\nconst Header:React.FC = ()=>{\r\n    return (\r\n        <header id=\"header\">\r\n            <div className=\"header-row\">\r\n                <a id=\"logoBox\">\r\n                    <img className=\"logo_img\" src={logo}/>\r\n                    <span>Sxd Design</span>\r\n                </a>\r\n                <div id=\"searchBox\">\r\n                    <Icon icon=\"icon-search\" style={{paddingRight:\"16px\"}}/>\r\n                    <input type=\"text\" placeholder=\"搜索\"/>\r\n                </div>\r\n                <div id=\"otherBox\">\r\n                    <div className=\"version\">Version : 0.0.1</div>\r\n                    <div className=\"git\"> </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    ) \r\n}\r\nexport default Header","E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\footer.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\layout\\hooks\\useScreenWidth.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\updateItems2.tsx",["178"],"import React from 'react';\r\nimport Item from '../components/item'\r\nimport { connect } from 'react-redux';\r\nclass ItemList extends React.Component<any,any> {\r\n    constructor(props:any){\r\n        super(props)\r\n        \r\n    }\r\n    componentWillMount(){\r\n        console.log(this.props)\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.data.map((item:any)=>{\r\n                        return (<Item key={item.id} mark={item.mark} id={item.id}/>)\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nfunction mapState(state:any){\r\n    return {data:state.items}\r\n}\r\nfunction mapReduce(dispatch:any){\r\n    return {\r\n        setItem(id:number){\r\n            dispatch({type: 'mark', id})\r\n        }\r\n    }\r\n}\r\nexport default connect(mapState,mapReduce)(ItemList)","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Divider.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Button.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Select.tsx",["179"],"import Document from '../components/content'\r\nimport React,{useState} from 'react'\r\nimport { Icontent, Iprops} from '../interface/document'\r\nimport {Select,Option} from '../../components/Select'\r\nimport Table from '../../components/Table'\r\nconst ButtonPage:React.FC = ()=>{\r\n    const brief=(<>\r\n        <h1>Select选择器</h1>\r\n        <p>下拉选择器。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。</p>\r\n                </li>\r\n                <li>\r\n                    <p>当选项少时（少于 5 项），建议直接将选项平铺，使用 Radio 是更好的选择。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>)\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Select defaultValue=\"a10\">\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"单选，基本使用。\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select defaultValue=\"a10\">\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"多选\",\r\n            description:\"多选，从已有条目中选择\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n    ];\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'mode',\r\n          brief: \"设置 Select 的模式为多选\",\r\n          type: 'string',\r\n          options: 'multiple',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'defaultValue',\r\n          brief: \"指定默认选中的条目\",\r\n          type: 'string | string[] number | number[]',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const data2=[\r\n        {\r\n          key:1,\r\n          arguments: 'value',\r\n          brief: \"默认根据此属性值进行筛选\",\r\n          type: 'string | number',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'label',\r\n          brief: \"选中该 Option 后，Select 的 title\",\r\n          type: 'string',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Select 参数</h2>\r\n            <Table data={data} columns={columns} />\r\n            <h2>Option 参数</h2>\r\n            <Table data={data2} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default ButtonPage","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Input.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\updateItems.tsx",["180"],"import React from 'react';\r\nimport Item from '../components/item'\r\nimport { connect } from 'react-redux';\r\nclass ItemList extends React.Component<any,any> {\r\n    constructor(props:any){\r\n        super(props)\r\n        \r\n    }\r\n    componentWillMount(){\r\n        console.log()\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.data.map((item:any)=>{\r\n                        return (<Item key={item.id} mark={item.mark} id={item.id} onClick={()=>this.props.setItem(item.id)}/>)\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nfunction mapState(state:any){\r\n    return {data:state.items}\r\n}\r\nfunction mapReduce(dispatch:any){\r\n    return {\r\n        setItem(id:number){\r\n            dispatch({type: 'mark', id})\r\n        }\r\n    }\r\n}\r\nexport default connect(mapState,mapReduce)(ItemList)","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Grid.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Table.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Icon.tsx",["181","182","183"],"import Document from '../components/content'\r\nimport React from 'react'\r\nimport { Icontent, Iprops} from '../interface/document'\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nconst ButtonPage:React.FC = ()=>{\r\n    const brief=(<>\r\n        <h1>Icon 图标</h1>\r\n        <p>提供了一套常用的图标集合。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n          <p>用图标展示一些信息。</p>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>)\r\n    \r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Icon icon=\"icon-search\"/>\r\n                    <Icon icon=\"icon-select-bold\"/>\r\n                    <Icon icon=\"icon-delete-filling\"/>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"基本使用\",\r\n            code:\r\n`\r\nimport {Icon} from 'sxdui'\r\n<Icon icon=\"icon-search\"/>\r\n<Icon icon=\"icon-select-bold\"/>\r\n<Icon icon=\"icon-delete-filling\"/>\r\n`\r\n        },\r\n    ]\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'type',\r\n          brief: \"设置按钮类型\",\r\n          type: 'string',\r\n          options: 'primary | dashed | link | text | default',\r\n          default:\"default\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'size',\r\n          brief: \"设置按钮尺寸\",\r\n          type: 'large | middle | small',\r\n          default:\"middle\"\r\n        },\r\n        {\r\n          key:3,\r\n          arguments: 'ghost',\r\n          brief: \"是否启用幽灵按钮\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:4,\r\n          arguments: 'loading',\r\n          brief: \"是否加载中状态\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:5,\r\n          arguments: 'disabled',\r\n          brief: \"是否禁用状态\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:6,\r\n          arguments: 'shape',\r\n          brief: \"设置按钮形状\",\r\n          type: 'circle | round',\r\n          default:\"—\"\r\n        },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>图标集合</h2>\r\n            <div className=\"content font-className\">\r\n        <ul className=\"icon_lists dib-box\">\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-3column\"></span>\r\n            <div className=\"name\">\r\n              column-3\r\n            </div>\r\n            <div className=\"code-name\">.icon-3column\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-4\"></span>\r\n            <div className=\"name\">\r\n              column-4\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-4\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-add\"></span>\r\n            <div className=\"name\">\r\n              add\r\n            </div>\r\n            <div className=\"code-name\">.icon-add\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-add-circle\"></span>\r\n            <div className=\"name\">\r\n              add-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-add-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-adjust\"></span>\r\n            <div className=\"name\">\r\n              adjust\r\n            </div>\r\n            <div className=\"code-name\">.icon-adjust\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down\"></span>\r\n            <div className=\"name\">\r\n              arrow-down\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-ashbin\"></span>\r\n            <div className=\"name\">\r\n              ashbin\r\n            </div>\r\n            <div className=\"code-name\">.icon-ashbin\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right\"></span>\r\n            <div className=\"name\">\r\n              arrow-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-browse\"></span>\r\n            <div className=\"name\">\r\n              browse\r\n            </div>\r\n            <div className=\"code-name\">.icon-browse\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-bottom\"></span>\r\n            <div className=\"name\">\r\n              bottom\r\n            </div>\r\n            <div className=\"code-name\">.icon-bottom\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-back\"></span>\r\n            <div className=\"name\">\r\n              back\r\n            </div>\r\n            <div className=\"code-name\">.icon-back\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-bad\"></span>\r\n            <div className=\"name\">\r\n              bad\r\n            </div>\r\n            <div className=\"code-name\">.icon-bad\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-double-left\"></span>\r\n            <div className=\"name\">\r\n              arrow-double-left\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-double-left\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-left-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-left-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-left-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-double-right\"></span>\r\n            <div className=\"name\">\r\n              arrow-double-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-double-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-caps-lock\"></span>\r\n            <div className=\"name\">\r\n              caps-lock\r\n            </div>\r\n            <div className=\"code-name\">.icon-caps-lock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-camera\"></span>\r\n            <div className=\"name\">\r\n              camera\r\n            </div>\r\n            <div className=\"code-name\">.icon-camera\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-chart-bar\"></span>\r\n            <div className=\"name\">\r\n              chart-bar\r\n            </div>\r\n            <div className=\"code-name\">.icon-chart-bar\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-attachment\"></span>\r\n            <div className=\"name\">\r\n              attachment\r\n            </div>\r\n            <div className=\"code-name\">.icon-attachment\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-code\"></span>\r\n            <div className=\"name\">\r\n              code\r\n            </div>\r\n            <div className=\"code-name\">.icon-code\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-close\"></span>\r\n            <div className=\"name\">\r\n              close\r\n            </div>\r\n            <div className=\"code-name\">.icon-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-check-item\"></span>\r\n            <div className=\"name\">\r\n              check-item\r\n            </div>\r\n            <div className=\"code-name\">.icon-check-item\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-calendar\"></span>\r\n            <div className=\"name\">\r\n              calendar\r\n            </div>\r\n            <div className=\"code-name\">.icon-calendar\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-comment\"></span>\r\n            <div className=\"name\">\r\n              comment\r\n            </div>\r\n            <div className=\"code-name\">.icon-comment\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-vertical\"></span>\r\n            <div className=\"name\">\r\n              column-vertical\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-vertical\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-horizontal\"></span>\r\n            <div className=\"name\">\r\n              column-horizontal\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-horizontal\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-complete\"></span>\r\n            <div className=\"name\">\r\n              complete\r\n            </div>\r\n            <div className=\"code-name\">.icon-complete\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-chart-pie\"></span>\r\n            <div className=\"name\">\r\n              chart-pie\r\n            </div>\r\n            <div className=\"code-name\">.icon-chart-pie\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-cry\"></span>\r\n            <div className=\"name\">\r\n              cry\r\n            </div>\r\n            <div className=\"code-name\">.icon-cry\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-customer-service\"></span>\r\n            <div className=\"name\">\r\n              customer-service\r\n            </div>\r\n            <div className=\"code-name\">.icon-customer-service\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-delete\"></span>\r\n            <div className=\"name\">\r\n              delete\r\n            </div>\r\n            <div className=\"code-name\">.icon-delete\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-down\"></span>\r\n            <div className=\"name\">\r\n              direction-down\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-down\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-copy\"></span>\r\n            <div className=\"name\">\r\n              copy\r\n            </div>\r\n            <div className=\"code-name\">.icon-copy\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-cut\"></span>\r\n            <div className=\"name\">\r\n              cut\r\n            </div>\r\n            <div className=\"code-name\">.icon-cut\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-down-circle\"></span>\r\n            <div className=\"name\">\r\n              direction-down-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-down-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-right\"></span>\r\n            <div className=\"name\">\r\n              direction-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-up\"></span>\r\n            <div className=\"name\">\r\n              direction-up\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-up\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-left\"></span>\r\n            <div className=\"name\">\r\n              direction-left\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-left\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-download\"></span>\r\n            <div className=\"name\">\r\n              download\r\n            </div>\r\n            <div className=\"code-name\">.icon-download\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-elipsis\"></span>\r\n            <div className=\"name\">\r\n              elipsis\r\n            </div>\r\n            <div className=\"code-name\">.icon-elipsis\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-edit\"></span>\r\n            <div className=\"name\">\r\n              edit\r\n            </div>\r\n            <div className=\"code-name\">.icon-edit\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-eye-close\"></span>\r\n            <div className=\"name\">\r\n              eye-close\r\n            </div>\r\n            <div className=\"code-name\">.icon-eye-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-email\"></span>\r\n            <div className=\"name\">\r\n              email\r\n            </div>\r\n            <div className=\"code-name\">.icon-email\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-error\"></span>\r\n            <div className=\"name\">\r\n              error\r\n            </div>\r\n            <div className=\"code-name\">.icon-error\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-favorite\"></span>\r\n            <div className=\"name\">\r\n              favorite\r\n            </div>\r\n            <div className=\"code-name\">.icon-favorite\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file-common\"></span>\r\n            <div className=\"name\">\r\n              file-common\r\n            </div>\r\n            <div className=\"code-name\">.icon-file-common\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-fabulous\"></span>\r\n            <div className=\"name\">\r\n              fabulous\r\n            </div>\r\n            <div className=\"code-name\">.icon-fabulous\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file\"></span>\r\n            <div className=\"name\">\r\n              file\r\n            </div>\r\n            <div className=\"code-name\">.icon-file\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-folder-close\"></span>\r\n            <div className=\"name\">\r\n              folder-close\r\n            </div>\r\n            <div className=\"code-name\">.icon-folder-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-filter\"></span>\r\n            <div className=\"name\">\r\n              filter\r\n            </div>\r\n            <div className=\"code-name\">.icon-filter\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-good\"></span>\r\n            <div className=\"name\">\r\n              good\r\n            </div>\r\n            <div className=\"code-name\">.icon-good\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-hide\"></span>\r\n            <div className=\"name\">\r\n              hide\r\n            </div>\r\n            <div className=\"code-name\">.icon-hide\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-home\"></span>\r\n            <div className=\"name\">\r\n              home\r\n            </div>\r\n            <div className=\"code-name\">.icon-home\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file-open\"></span>\r\n            <div className=\"name\">\r\n              file-open\r\n            </div>\r\n            <div className=\"code-name\">.icon-file-open\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-link\"></span>\r\n            <div className=\"name\">\r\n              link\r\n            </div>\r\n            <div className=\"code-name\">.icon-link\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-lock\"></span>\r\n            <div className=\"name\">\r\n              lock\r\n            </div>\r\n            <div className=\"code-name\">.icon-lock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-menu\"></span>\r\n            <div className=\"name\">\r\n              menu\r\n            </div>\r\n            <div className=\"code-name\">.icon-menu\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-loading\"></span>\r\n            <div className=\"name\">\r\n              loading\r\n            </div>\r\n            <div className=\"code-name\">.icon-loading\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-help\"></span>\r\n            <div className=\"name\">\r\n              help\r\n            </div>\r\n            <div className=\"code-name\">.icon-help\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-modular\"></span>\r\n            <div className=\"name\">\r\n              modular\r\n            </div>\r\n            <div className=\"code-name\">.icon-modular\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-notification\"></span>\r\n            <div className=\"name\">\r\n              notification\r\n            </div>\r\n            <div className=\"code-name\">.icon-notification\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-mic\"></span>\r\n            <div className=\"name\">\r\n              mic\r\n            </div>\r\n            <div className=\"code-name\">.icon-mic\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-more\"></span>\r\n            <div className=\"name\">\r\n              more\r\n            </div>\r\n            <div className=\"code-name\">.icon-more\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-play\"></span>\r\n            <div className=\"name\">\r\n              play\r\n            </div>\r\n            <div className=\"code-name\">.icon-play\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-print\"></span>\r\n            <div className=\"name\">\r\n              print\r\n            </div>\r\n            <div className=\"code-name\">.icon-print\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-search\"></span>\r\n            <div className=\"name\">\r\n              search\r\n            </div>\r\n            <div className=\"code-name\">.icon-search\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-share\"></span>\r\n            <div className=\"name\">\r\n              share\r\n            </div>\r\n            <div className=\"code-name\">.icon-share\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-select\"></span>\r\n            <div className=\"name\">\r\n              select\r\n            </div>\r\n            <div className=\"code-name\">.icon-select\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-stop\"></span>\r\n            <div className=\"name\">\r\n              stop\r\n            </div>\r\n            <div className=\"code-name\">.icon-stop\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-success\"></span>\r\n            <div className=\"name\">\r\n              success\r\n            </div>\r\n            <div className=\"code-name\">.icon-success\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-smile\"></span>\r\n            <div className=\"name\">\r\n              smile\r\n            </div>\r\n            <div className=\"code-name\">.icon-smile\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-setting\"></span>\r\n            <div className=\"name\">\r\n              setting\r\n            </div>\r\n            <div className=\"code-name\">.icon-setting\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-time\"></span>\r\n            <div className=\"name\">\r\n              time\r\n            </div>\r\n            <div className=\"code-name\">.icon-time\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-top\"></span>\r\n            <div className=\"name\">\r\n              top\r\n            </div>\r\n            <div className=\"code-name\">.icon-top\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-unlock\"></span>\r\n            <div className=\"name\">\r\n              unlock\r\n            </div>\r\n            <div className=\"code-name\">.icon-unlock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-user\"></span>\r\n            <div className=\"name\">\r\n              user\r\n            </div>\r\n            <div className=\"code-name\">.icon-user\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-upload\"></span>\r\n            <div className=\"name\">\r\n              upload\r\n            </div>\r\n            <div className=\"code-name\">.icon-upload\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-warning\"></span>\r\n            <div className=\"name\">\r\n              warning\r\n            </div>\r\n            <div className=\"code-name\">.icon-warning\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-close-bold\"></span>\r\n            <div className=\"name\">\r\n              close-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-close-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-down-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-minus-bold\"></span>\r\n            <div className=\"name\">\r\n              minus-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-minus-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-select-bold\"></span>\r\n            <div className=\"name\">\r\n              select-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-select-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-down-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-left-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-left-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-left-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-clock-filling\"></span>\r\n            <div className=\"name\">\r\n              clock-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-clock-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-delete-filling\"></span>\r\n            <div className=\"name\">\r\n              delete-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-delete-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-favorite-filling\"></span>\r\n            <div className=\"name\">\r\n              favorite-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-favorite-filling\r\n            </div>\r\n          </li>\r\n          \r\n        </ul>\r\n      </div>\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default ButtonPage","E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Checkbox.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\pages\\Radio.tsx",["184"],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\item.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\components\\Button\\button.tsx",["185"],"import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport Icon from '../Icon'\r\ninterface Ibutton{\r\n    type?:string;\r\n    size?:string;\r\n    disabled?:boolean;\r\n    shape?:string;\r\n    ghost?:boolean;\r\n    block?:boolean;\r\n    children?:React.ReactNode;\r\n    onClick?: any;\r\n    style?:any;\r\n    danger?:boolean;\r\n    loading?:boolean;\r\n}\r\n\r\nconst Button:React.FC<Ibutton> = (props)=>{\r\n    const {\r\n        type='default',\r\n        size='normal',\r\n        disabled=false,\r\n        ghost = false,\r\n        block=false,\r\n        shape,\r\n        children,\r\n        style,\r\n        danger=false,\r\n        loading=false,\r\n        /** if we extract items here, we dont need use omit.js */\r\n        // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\r\n        ...rest\r\n      } = props;\r\n    const perfixCls = \"sxd-btn\"\r\n    const classes = classNames(perfixCls, {\r\n        [`${perfixCls}-${type}`]:type,\r\n        [`${perfixCls}-${size}`]:size,\r\n        [`${perfixCls}-${shape}`]:shape,\r\n        [`${perfixCls}-disabled`]:disabled,\r\n        [`${perfixCls}-block`]:block,\r\n        [`${perfixCls}-ghost`]:ghost,\r\n        [`${perfixCls}-danger`]:danger,\r\n    })\r\n    const handleClick = (e:any)=>{\r\n        if(props.disabled) return \r\n        const { onClick } = props;\r\n        if(onClick){\r\n            onClick(e)\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes} onClick={(e)=>handleClick(e)} style={style}>\r\n            {\r\n            loading\r\n                ? <Icon icon=\"icon-loading\" style={{marginRight:\"8px\"}} spin/>\r\n                : \"\"\r\n            }\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Button","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Icon\\index.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\components\\Checkbox\\index.tsx",["186","187","188","189","190","191"],"import React,{useEffect, useState, useRef} from 'react';\r\nimport classNames from 'classnames';\r\ninterface ICheckbox{\r\n    checked?:boolean;\r\n    defaultChecked?:boolean;\r\n    disabled?:boolean;\r\n    indeterminate?:boolean;\r\n    onChange?:any;\r\n    children?:any;\r\n    Group?:any;\r\n}\r\ninterface Option{\r\n    value?:string;\r\n    label?:string;\r\n    disabled?:boolean;\r\n}\r\ninterface ICheckboxGroup{\r\n    options?:any[];\r\n    defaultValue?:string[];\r\n    value?:string[];\r\n    disabled?:boolean;\r\n\r\n    onChange?:any;\r\n\r\n}\r\nconst Checkbox:React.FC<ICheckbox> = (props:ICheckbox)=>{\r\n    const { onChange=()=>{}, children, checked, defaultChecked=false, disabled=false,indeterminate=false } = props\r\n    const [isChecked,setChecked] = useState(defaultChecked)\r\n    const [isDisabled,setDisabled] = useState(disabled)\r\n    useEffect(()=>{\r\n        if(isDisabled) return ;\r\n        \r\n        if(checked!==undefined){\r\n            setChecked(checked)\r\n        }\r\n    },[checked])\r\n    useEffect(()=>{\r\n        if(disabled!==undefined){\r\n            setDisabled(disabled)\r\n        }\r\n    },[disabled])\r\n    const handleClick = ()=>{\r\n        if(isDisabled) return ;\r\n        setChecked(!isChecked)\r\n        onChange(!isChecked)\r\n    }\r\n    const classes = classNames(\"sxd-checkbox\",{\r\n        \"sxd-checkbox-checked\":isChecked,\r\n        \"sxd-checkbox-disabled\":isDisabled,\r\n        \"sxd-checkbox-indeterminate\":indeterminate,\r\n    })\r\n    const wrapClasses = classNames(\"sxd-checkbox-wrapper\",{\"sxd-checkbox-wrapper-disabled\":isDisabled})\r\n    return (\r\n        <span style={{display:\"inline-block\"}}>\r\n            <span className={wrapClasses} onClick={()=>handleClick()}>\r\n                <span className={classes}>\r\n                    <span className=\"sxd-checkbox-inner\"/>\r\n                </span>\r\n                <span className=\"sxd-checkbox-text\">{children}</span>\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\nconst CheckboxGroup:React.FC<ICheckboxGroup> = (props:any)=>{\r\n    const {options,defaultValue,disabled,onChange=()=>{},value} = props\r\n    //console.log(\"value:\",value)\r\n    const exportvalue=  value || defaultValue || []\r\n    const getChecked = (option:any)=>{\r\n        if (typeof option === 'string') {\r\n            if(exportvalue.indexOf(option)>-1){\r\n                return true\r\n            }\r\n        }else{\r\n            if(exportvalue.indexOf(option.value)>-1){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    const initData = ()=>{\r\n        if(options && options.length > 0){\r\n            return options.map((option:any) => {\r\n                if (typeof option === 'string') {\r\n                  return {\r\n                    label: option,\r\n                    value: option,\r\n                    checked:getChecked(option),\r\n                    disabled:false\r\n                  };\r\n                }\r\n                return {...option,checked:getChecked(option),disabled:option.disabled||false};\r\n            });\r\n        }\r\n        return []\r\n    }\r\n    const [data,setData] = useState(initData())\r\n    const [click,setClick] = useState(false)\r\n    //setData(initData())\r\n    let flag = useRef(true)\r\n    useEffect(()=>{\r\n        if(flag.current){\r\n            flag.current=false\r\n            return\r\n        }\r\n        setData(initData())\r\n    },[exportvalue])\r\n    useEffect(()=>{\r\n        let v:any = []\r\n        data.map((item:any)=>{\r\n            if(item.checked){\r\n                v.push(item.value)\r\n            }\r\n        })\r\n        onChange(v)\r\n    },[click])\r\n    return data.map((item:any)=>{\r\n        const handleClick = (value:any)=>{\r\n            if(item.disabled) return ;\r\n            setData(data.map((item:any)=>{\r\n                if(value === item.value){\r\n                    return {...item,checked:!item.checked}\r\n                }\r\n                return item\r\n            }))\r\n            setClick(!click)\r\n        }\r\n        const classes = classNames(\"sxd-checkbox\",{\r\n            \"sxd-checkbox-checked\":item.checked,\r\n            \"sxd-checkbox-disabled\":item.disabled,\r\n           \r\n        })\r\n        const wrapClasses = classNames(\"sxd-checkbox-wrapper\",{\"sxd-checkbox-wrapper-disabled\":item.disabled})\r\n        return (\r\n            <span key={item.value} style={{display:\"inline-block\"}}>\r\n                <span className={wrapClasses} onClick={()=>handleClick(item.value)}>\r\n                    <span className={classes}>\r\n                        <span className=\"sxd-checkbox-inner\"/>\r\n                    </span>\r\n                    <span className=\"sxd-checkbox-text\">{item.label}</span>\r\n                </span>\r\n            </span>\r\n        )\r\n    })\r\n    \r\n}\r\n\r\nexport { Checkbox, CheckboxGroup }","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Divider\\index.tsx",["192","193"],"import React,{useEffect, useState} from 'react';\r\nimport classNames from 'classnames';\r\ninterface IDivider{\r\n    orientation?:\"left\" | \"right\" | \"middle\";\r\n    dashed?:boolean;\r\n    children?:any;\r\n}\r\nconst Divider:React.FC<IDivider> = (props:IDivider)=>{\r\n    const { orientation, dashed, children } = props\r\n    const classes = classNames(\"sxd-divider\",{\r\n        \"sxd-divider-dashed\":dashed,\r\n        \"sxd-divider-with-text\":orientation,\r\n        [`sxd-divider-with-text-${orientation}`]:orientation\r\n    })\r\n    const dividerContent=()=>{\r\n        if(children){\r\n            return (\r\n                <span className=\"sxd-divider-inner-text\">{children}</span>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes}>\r\n            {dividerContent()}\r\n        </div>\r\n    )\r\n}\r\nexport default Divider","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Select\\index.tsx",["194","195","196","197","198","199"],"import React,{useState, useEffect, useRef} from 'react';\r\nimport classNames from 'classnames';\r\nimport Icon from '../Icon'\r\ninterface ISelect{\r\n    mode?:string;\r\n    defaultValue?:any;\r\n    clearable?:boolean;\r\n    children?:any;\r\n    childrenArray?:any;\r\n    style?:object;\r\n    onChange?:any;\r\n}\r\ninterface IOption{\r\n    children:any;\r\n    value?:any;\r\n    label?:any;\r\n}\r\ninterface ISelectInfo{\r\n    key:string;\r\n    isSelect:boolean;\r\n    value:any;\r\n    label:any;\r\n    \r\n}\r\n//util工具方法\r\nconst getInnerText = (child:any)=>{\r\n    if(typeof child.children==='string'){\r\n        return child.children\r\n    }else{\r\n        return child.value\r\n    }\r\n}\r\nconst isSelect = (dv:any,cv:any)=>{\r\n    if(typeof dv===\"string\"){\r\n        return dv===cv\r\n    }else if(typeof dv===\"object\"){\r\n        return dv.indexOf(cv)>-1\r\n    }\r\n    return false\r\n}\r\n\r\nconst Option:React.FC<IOption>=(props:IOption)=>{\r\n    return (\r\n        <div>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\nconst Select:React.FC<ISelect> = (props)=>{\r\n    const { children=[], onChange=()=>{}, clearable, defaultValue=[], mode, style } = props;\r\n    // init\r\n    const setInitData = ()=>{\r\n        \r\n        if(!children || children.length<1){\r\n            return []\r\n        }\r\n        let initData:ISelectInfo[]=[]\r\n        for(let i=0;i<children.length;i++){\r\n            initData.push({\r\n                key:children[i].props.key || children[i].props.value,\r\n                isSelect:isSelect(defaultValue,children[i].props.value),\r\n                label:children[i].props.label || getInnerText(children[i].props) || \"\",\r\n                value:children[i].props.value,\r\n            })\r\n        }\r\n        return initData\r\n    }\r\n    //usestate\r\n    const [isShowOption,setShowStatus] = useState(false)\r\n    const [iconRotate,setIconRotate] = useState({ transform:\"rotate(0deg)\" })\r\n    const [top,setTop] = useState(40)\r\n    const [selectedInfo,setselectedInfo] = useState<ISelectInfo[]>( setInitData() )\r\n    //点击事件监听\r\n    const selectRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        if(mode!==\"multiple\"){\r\n            removeListener()\r\n        }\r\n        if(selectRef.current!==e.target && !selectRef.current.contains(e.target||\"\")){\r\n            setShowStatus(false) \r\n            removeListener()\r\n        }\r\n    }\r\n    const addListener = ()=>{\r\n        window.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener('click', fn, true);\r\n    }\r\n\r\n    let flag=useRef(true)\r\n    useEffect(()=>{\r\n        let doc:HTMLElement | null = document.getElementById(\"calcHeight\")\r\n        let height:number = doc?doc.clientHeight:32\r\n        setTop(10+height)\r\n        if(flag.current){\r\n            flag.current=false\r\n            return\r\n        }\r\n        if(mode===\"multiple\"){\r\n            let emitVal:any[]=[]\r\n            selectedInfo.map((item:ISelectInfo)=>{\r\n                if(item.isSelect) emitVal.push(item.value)\r\n            })\r\n            onChange(emitVal)\r\n        }else{\r\n            selectedInfo.map((item:ISelectInfo)=>{\r\n                if(item.isSelect) onChange(item.value)\r\n            })\r\n            setShowStatus(false)\r\n        }\r\n    },[selectedInfo])\r\n    //onclick事件： 清空，下拉，选择\r\n    const handleClear = (e:any)=>{\r\n        e.stopPropagation();\r\n        setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n            return {...info,isSelect:false}\r\n        }))\r\n    }\r\n    const dropDown = ()=>{\r\n        addListener();\r\n        setShowStatus(!isShowOption)\r\n    }\r\n    const multipleClick = (item:any,e:any)=>{\r\n        e.stopPropagation()\r\n        if(mode===\"multiple\"){ \r\n            //此处更新为异步\r\n            setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n                if(info.key===(item.key || item.value)){  \r\n                    return {...info,isSelect:!info.isSelect}\r\n                }\r\n                return info\r\n            }))\r\n        }else{\r\n            setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n                if(info.key===(item.key || item.value)){\r\n                    \r\n                    return {...info,isSelect:true}\r\n                }\r\n                return {...info,isSelect:false}\r\n            }))\r\n        }\r\n    }\r\n    //展示框\r\n    const displayArea = ()=>{\r\n        const selectedClass=classNames(\"selectedText\",{\"selectedText-focus\":isShowOption})\r\n        const dropDownIcon = mode!==\"multiple\"\r\n            ?(<Icon className=\"suffixIcon\" style={isShowOption?{transform:\"rotate(-180deg)\"}:{transform:\"rotate(0deg)\"}} icon=\"icon-arrow-down-bold\"/>)\r\n            :\"\";\r\n        const clearIcon = clearable && selectedInfo.some((item:ISelectInfo)=>item.isSelect)\r\n            ?(<span className=\"clearIcon\" onClick={(e)=>handleClear(e)}>\r\n                <Icon style={{fontSize:\"14px\"}} icon=\"icon-close-bold\"/>\r\n            </span>)\r\n            :\"\";\r\n        const displayInline =(item:any)=>{\r\n            if(item.isSelect){\r\n                return mode===\"multiple\"\r\n                    ?(\r\n                        <div className=\"multipleItem\" key={item.key}>\r\n                            <span className=\"item-label\">\r\n                                {item.label}\r\n                            </span>\r\n                            <span onClick={(e)=>multipleClick(item,e)}>\r\n                                <Icon className=\"item-icon\" icon=\"icon-close-bold\"/>\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                    :(\r\n                        <div style={{paddingRight:\"12px\"}} key={item.key}>\r\n                            {item.label}\r\n                        </div>\r\n                    )\r\n            }\r\n            return \"\"\r\n        } \r\n        return (\r\n            <div className={selectedClass} onClick={()=>dropDown()}>\r\n                <div className=\"multipleBox\" id={isShowOption?\"calcHeight\":\"\"}>\r\n                    {selectedInfo.map((item:ISelectInfo)=>{\r\n                        return displayInline(item)\r\n                    })}\r\n                </div>\r\n                {dropDownIcon}\r\n                {clearIcon}\r\n            </div>\r\n        )\r\n    }\r\n    //列表\r\n    const OptionList = ()=>{\r\n        if(isShowOption){\r\n            if(children && children.length>0){\r\n                const row = (info:any)=>{\r\n                    const optionsClasses = classNames(\"optionItem\",{\"optionItem-selected\":info.isSelect})\r\n                    const iconArea = info.isSelect?(<div><Icon style={{color:\"#1890ff\"}} icon=\"icon-select\"/></div>):\"\"\r\n                    return mode===\"multiple\"\r\n                        ?(<div className={optionsClasses} key={info.key} onClick={(e)=>multipleClick(info,e)}>\r\n                            <div style={{flex:\"auto\",userSelect: \"none\"}}>\r\n                                {info.label}\r\n                            </div>\r\n                            {iconArea}\r\n                        </div>)\r\n                        :(<div className={optionsClasses} key={info.key} onClick={(e)=>multipleClick(info,e)}>\r\n                            {info.label}\r\n                        </div>)\r\n                }\r\n                return (\r\n                    <div className=\"selectOptions\" style={{top:top+'px'}}>\r\n                        {selectedInfo.map((info:ISelectInfo)=>{\r\n                            {return row(info)}\r\n                        })}\r\n                    </div>\r\n                )\r\n            }else{\r\n                return (\r\n                    <div className=\"selectOptions\">\r\n                        <div>no data</div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return \"\"\r\n    }\r\n    return (\r\n        <div className=\"select\"  style={style} ref={selectRef}>\r\n            {displayArea()}\r\n            {OptionList()}\r\n        </div>\r\n    )\r\n}\r\nexport {Select,Option}","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\index.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\components\\Table\\index.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\components\\Grid\\index.tsx",["200"],"import React,{useEffect, useState} from 'react';\r\nimport {initData,getGutter,getResponsiveGrid} from './hook'\r\nimport classNames from 'classnames';\r\ninterface IRow{\r\n    gutter?:any;\r\n    align?:'top' | 'middle' | 'bottom';\r\n    justify?:'start' | 'end' | 'center' | 'space-around' | 'space-between';\r\n    wrap?:boolean;\r\n    children:any;\r\n    style?:object;\r\n}\r\ninterface ICol{\r\n    span?:number;\r\n    order?:number;\r\n    flex?:string | number;\r\n    offset?:number;\r\n    style?:object;\r\n    xs?:number|object;\r\n    sm?:number|object;\r\n    md?:number|object;\r\n    lg?:number|object;\r\n    xl?:number|object;\r\n    xxl?:number|object;\r\n}\r\n\r\nconst Row:React.FC<IRow> = (props)=>{\r\n    const { gutter, justify=\"start\", align=\"top\", style={} } = props\r\n    const [offsetWidth,setOffetWidth] = useState(document.body.offsetWidth)\r\n    const [gridData,setGridData] = useState(initData(props.children,offsetWidth,gutter))\r\n    const fn = ()=>{\r\n        setOffetWidth(document.body.offsetWidth)\r\n        removeListener()\r\n    }\r\n    const addListener = ()=>{\r\n        window.addEventListener(\"resize\",fn)\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener(\"resize\",fn);\r\n    }\r\n    useEffect(()=>{\r\n        addListener()\r\n        setGridData(gridData.map((item:any)=>{\r\n            const {xs, sm, md, lg, xl,xxl}=item.responsive\r\n            const res = getResponsiveGrid(offsetWidth,item.responsive) || { span:item.span,offset:item.offset,order:item.order }\r\n            if(xs || sm || md || lg || xl || xxl){\r\n                return {\r\n                    ...item,\r\n                    span:res.span,\r\n                    offset:res.offset,\r\n                }\r\n            }\r\n            if(Object.prototype.toString.call(gutter) === '[object Object]'){\r\n                return {...item,gutter:getGutter(gutter,offsetWidth)}\r\n            }  \r\n            return item\r\n        }))\r\n    },[offsetWidth])\r\n    \r\n    //console.log(gutter,gridData)\r\n    let row_classes = classNames(\"sxd-row\",{\r\n        [`sxd-row-${justify}`]:justify,\r\n        [`sxd-row-${align}`]:align\r\n    })\r\n    return (\r\n        <div className={row_classes} style={style}>\r\n            { gridData.map((item:any,index:number)=>{\r\n                let col_classes = classNames(\"sxd-col\",{\r\n                    \"gutter-row\":item.gutter,\r\n                    [`sxd-col-${item.span}`]:item.span,\r\n                    [`sxd-col-offset-${item.offset}`]:item.offset,\r\n                    [item.justify]:item.justify,\r\n                    [item.align]:item.align\r\n                })\r\n                const gutter = item.gutter ? {padding:`${item.gutter.vertical!==0?item.gutter.vertical/2:0}px ${item.gutter.horizontal!==0?item.gutter.horizontal/2:0}px`} : {}\r\n                const flex = item.flex ? {flex:item.flex} : {}\r\n                const order = item.order ? {order:item.order} : {}\r\n                let style = Object.assign({},gutter,flex,order,item.style)\r\n                return (<div key={index} className={col_classes} style={style}>{item.node}</div>)\r\n            }) }\r\n        </div>\r\n    )\r\n}\r\nconst Col:React.FC<ICol> = ()=>{\r\n    return (<></>)\r\n}\r\nexport { Row,Col }","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Input\\index.tsx",["201","202","203","204","205","206"],"import React,{useState, useEffect,useRef} from 'react'\r\nimport classNames from 'classnames';\r\nimport Icon from '../Icon'\r\nimport {Select} from '../Select'\r\nimport { clear } from 'console';\r\ninterface IInput  {\r\n    size?:string;\r\n    style?:object;\r\n    placeholder?:string;\r\n    value?:any;\r\n    defaultValue?:any;\r\n    prefix?:any;\r\n    suffix?:any;\r\n    addonBefore?:any;\r\n    addonAfter?:any;\r\n    clearable?:boolean;\r\n    children?:any;\r\n    //事件\r\n    onChange?:any;\r\n    onClick?:any;\r\n}\r\nconst Input:React.FC<IInput> = (props:IInput)=>{\r\n    const {style,size=\"default\",placeholder=\"\", value=\"\",defaultValue=\"\", prefix=\"\", suffix=\"\", addonBefore, addonAfter, clearable=false, onChange=()=>{},onClick=()=>{}} = props\r\n    const [valueInner,setValue] = useState(value)\r\n    const handleChange = (e:any)=>{\r\n        let value = e.target.value\r\n        setValue(value)\r\n        onChange(value)\r\n    }\r\n    \r\n    const renderInput = ()=>{\r\n        return (\r\n            <input className=\"sxd-input\" onClick={()=>{onClick()}} placeholder={placeholder} value={valueInner} onChange={(e)=>handleChange(e)}/>\r\n        )\r\n    }\r\n    const [isFocus,setFocus] = useState(false)\r\n    const classes = classNames(\"sxd-input-wrap\",{\r\n        [`sxd-wrap-${size}`]:size,\r\n        [\"sxd-input-wrap-focus\"]:isFocus\r\n    })\r\n    const inputWrapRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        removeListener()\r\n        setFocus(false) \r\n        \r\n    }\r\n    const addListener = ()=>{\r\n        document.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        document.removeEventListener('click', fn, true);\r\n    }\r\n    const wrapFocus = ()=>{\r\n        addListener();\r\n        setFocus(true)\r\n    }\r\n    const beforeInfo = ()=>{\r\n        if(typeof addonBefore==='string'){\r\n            return (<span className=\"groupAdd\">{addonBefore}</span>)\r\n        }\r\n        return addonBefore\r\n    }\r\n    const afterInfo = ()=>{\r\n        if(typeof addonAfter==='string'){\r\n            return (<span className=\"groupAdd\">{addonAfter}</span>)\r\n        }\r\n        return addonAfter\r\n    }\r\n    const wrapInput = ()=>{\r\n        if(size!==\"default\" || prefix!==\"\" || suffix!==\"\" || addonBefore!==\"\" || addonAfter!==\"\")\r\n        {\r\n            return (\r\n                <div className=\"groupWrap\">\r\n                    {beforeInfo()}\r\n                    <div className={classes}  style={style} onClick={()=>{wrapFocus()}} ref={inputWrapRef}>\r\n                        {prefix}\r\n                        \r\n                        {renderInput()}\r\n                        \r\n                        {clearable && valueInner!==\"\"?(\r\n                            <Icon \r\n                            icon=\"icon-close-bold\" \r\n                            style={{cursor:\"pointer\"}}\r\n                            onClick={()=>setValue(\"\")}\r\n                            />\r\n                            ):\"\"}\r\n                        {suffix}\r\n                    </div>\r\n                    {afterInfo()}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes}  style={style} onClick={()=>{wrapFocus()}} ref={inputWrapRef}>\r\n                {renderInput()}\r\n            </div>\r\n        )\r\n    }\r\n    return wrapInput()\r\n}\r\n\r\n\r\ninterface IOptions  {\r\n    key?:any;\r\n    value:number|string;\r\n    label?:number|string;\r\n}\r\ninterface IFilterOptions{\r\n    key:any;\r\n    isShow:boolean;\r\n    value:number|string;\r\n    label:number|string;\r\n}\r\ninterface IAutoComplete  {\r\n    defaultValue?:number|string;\r\n    options:IOptions[];\r\n    placeholder?:string;\r\n    onChange?:any;\r\n    style?:object;\r\n}\r\nconst AutoComplete:React.FC<IAutoComplete> = (props:IAutoComplete)=>{\r\n    const { defaultValue=\"\",style,placeholder,options, onChange=()=>{}} = props\r\n    const [inputVal,setInputVal] = useState(defaultValue)\r\n    const inputWrapRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        removeListener()\r\n        if(inputWrapRef.current!==e.target && !inputWrapRef.current.contains(e.target||\"\")){\r\n            setShowStatus(false)  \r\n        }\r\n    }\r\n    const addListener = ()=>{\r\n        document.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        document.removeEventListener('click', fn, true);\r\n    }\r\n    const initData = ()=>{\r\n        if(!options || options.length<1){\r\n            return []\r\n        }\r\n        let initData:IFilterOptions[]=[]\r\n        for(let i=0;i<options.length;i++){\r\n            if(!options[i].key) options[i].key=options[i].value\r\n            initData.push({\r\n                key:options[i].key,\r\n                isShow:true,\r\n                label:options[i].label || options[i].value,\r\n                value:options[i].value,\r\n            })\r\n        }\r\n        return initData\r\n    }\r\n    const [filterOptions,setOptions] = useState(initData())\r\n    const [isShowOption,setShowStatus] = useState(false)\r\n    const handleChange = (v:number|string)=>{\r\n        onChange(v)\r\n        setInputVal(v)\r\n        setOptions(filterOptions.map((item:IFilterOptions)=>{\r\n            return {...item,isShow:item.value.toString().indexOf(v.toString())>-1}\r\n        }))\r\n    }\r\n    const handleClick = (item:IFilterOptions,e:any)=>{\r\n        e.stopPropagation()\r\n        handleChange(item.value)\r\n        setShowStatus(false)\r\n        removeListener()\r\n    }\r\n    const OptionList = ()=>{\r\n        if(isShowOption && filterOptions.length>0 && filterOptions.some((item:IFilterOptions)=>item.isShow)){\r\n            return (\r\n                <div className=\"selectOptions\" style={{top:'35px'}}>\r\n                    {filterOptions.filter((item:IFilterOptions)=>{\r\n                        return item.isShow\r\n                    }).map((info:IFilterOptions)=>{\r\n                        return (\r\n                            <div className=\"optionItem\" key={info.key} onClick={(e)=>handleClick(info,e)}>\r\n                                {info.label}\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        return \"\"\r\n    }\r\n    return (\r\n        <div className=\"select\" ref={inputWrapRef}>\r\n            <input \r\n            className=\"sxd-input\" \r\n            placeholder={placeholder}\r\n            value={inputVal} \r\n            onChange={(e:any)=>{handleChange(e.target.value)}} \r\n            onClick={()=>{setShowStatus(true);addListener()}} \r\n            />\r\n            {OptionList()}\r\n        </div>\r\n        )\r\n}\r\nexport {Input,AutoComplete}","E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demoList.tsx",["207"],"import React from 'react';\r\nimport Demo from './demo'\r\nimport { IDemo } from './interface'\r\ninterface IDemoList{\r\n    content:IDemo[];\r\n}\r\nconst DemoList:React.FC<IDemoList> = (props:IDemoList)=>{\r\n    const {content}=props\r\n    const cLength = content.length\r\n    if(cLength<1) return (<div></div>)\r\n    if(cLength===1){\r\n        return (\r\n            <div className=\"codeWrap\">\r\n                <Demo {...content[0]}/>\r\n            </div>\r\n        )   \r\n    }\r\n    let left:IDemo[]=[];\r\n    let right:IDemo[]=[];\r\n    const middle = cLength % 2 ==0 ? cLength/2 : Math.floor(cLength/2) + 1\r\n    for(let i=0;i<middle;i++){\r\n        left=[...left,content[i]]\r\n    }\r\n    for(let i=0;i<cLength-middle;i++){\r\n        right=[...right,content[i+middle]]\r\n    }\r\n    if(content[0].col===1){\r\n        return (\r\n            <div>\r\n                <div className=\"codeWrap\" style={{width:\"100%\"}}>\r\n                    {content.map((item:IDemo)=>{\r\n                        return (<Demo key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n            </div>\r\n        ) \r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"codeWrap\">\r\n                {left.map((item:IDemo)=>{\r\n                    return (<Demo key={item.id} {...item}/>)\r\n                })}\r\n            </div> \r\n            <div className=\"codeWrap\" style={{paddingRight:\"0px\"}}>\r\n                {right.map((item:IDemo)=>{\r\n                    return (<Demo key={item.id} {...item}/>)\r\n                })}\r\n            </div> \r\n        </div>\r\n    ) \r\n}\r\n/*class Content extends React.Component<IDoc> {\r\n    constructor(props:IDoc){\r\n        super(props)\r\n    }\r\n    render(){\r\n        const {content}=this.props\r\n        const cLength = content.length\r\n        if(cLength<1) return (<div></div>)\r\n        if(cLength===1){\r\n            return (\r\n                <div className=\"codeWrap\">\r\n                    <Demo {...content[0]}/>\r\n                </div> \r\n            )   \r\n        }\r\n        let left:Icontent[]=[];\r\n        let right:Icontent[]=[];\r\n        const middle = cLength % 2 ==0 ? cLength/2 : Math.floor(cLength/2) + 1\r\n        for(let i=0;i<middle;i++){\r\n            left=[...left,content[i]]\r\n        }\r\n        for(let i=0;i<cLength-middle;i++){\r\n            right=[...right,content[i+middle]]\r\n        }  \r\n        return (\r\n            <div>\r\n                <div className=\"codeWrap\">\r\n                    {left.map((item:Icontent)=>{\r\n                        return (<Demo key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n                <div className=\"codeWrap\" style={{paddingRight:\"0px\"}}>\r\n                    {right.map((item:Icontent)=>{\r\n                        return (<Demo key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n            </div>\r\n        ) \r\n    }\r\n}*/\r\nexport default DemoList","E:\\family-work\\SxdUI\\react-ui\\src\\components\\Grid\\hook.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\index.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\Preview.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\Code.tsx",[],"E:\\family-work\\SxdUI\\react-ui\\src\\site\\components\\content\\demo\\Introduce.tsx",[],{"ruleId":"208","severity":1,"message":"209","line":1,"column":15,"nodeType":"210","messageId":"211","endLine":1,"endColumn":23},{"ruleId":"208","severity":1,"message":"212","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":8,"column":8,"nodeType":"210","messageId":"211","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":12,"column":1,"nodeType":"217","endLine":105,"endColumn":2},{"ruleId":"218","severity":1,"message":"219","line":8,"column":17,"nodeType":"220","endLine":8,"endColumn":33},{"ruleId":"221","severity":1,"message":"222","line":9,"column":21,"nodeType":"220","endLine":9,"endColumn":59},{"ruleId":"223","severity":1,"message":"224","line":5,"column":5,"nodeType":"225","messageId":"226","endLine":8,"endColumn":6},{"ruleId":"208","severity":1,"message":"209","line":2,"column":15,"nodeType":"210","messageId":"211","endLine":2,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":5,"column":5,"nodeType":"225","messageId":"226","endLine":8,"endColumn":6},{"ruleId":"208","severity":1,"message":"227","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":13},{"ruleId":"208","severity":1,"message":"228","line":37,"column":11,"nodeType":"210","messageId":"211","endLine":37,"endColumn":15},{"ruleId":"208","severity":1,"message":"229","line":82,"column":12,"nodeType":"210","messageId":"211","endLine":82,"endColumn":19},{"ruleId":"208","severity":1,"message":"209","line":2,"column":15,"nodeType":"210","messageId":"211","endLine":2,"endColumn":23},{"ruleId":"208","severity":1,"message":"230","line":32,"column":12,"nodeType":"210","messageId":"211","endLine":32,"endColumn":16},{"ruleId":"208","severity":1,"message":"231","line":12,"column":11,"nodeType":"210","messageId":"211","endLine":12,"endColumn":17},{"ruleId":"232","severity":1,"message":"233","line":36,"column":7,"nodeType":"234","endLine":36,"endColumn":16,"suggestions":"235"},{"ruleId":"208","severity":1,"message":"236","line":65,"column":33,"nodeType":"210","messageId":"211","endLine":65,"endColumn":41},{"ruleId":"232","severity":1,"message":"237","line":106,"column":7,"nodeType":"234","endLine":106,"endColumn":20,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":109,"column":28,"nodeType":"241","messageId":"242","endLine":109,"endColumn":30},{"ruleId":"232","severity":1,"message":"243","line":115,"column":7,"nodeType":"234","endLine":115,"endColumn":14,"suggestions":"244"},{"ruleId":"208","severity":1,"message":"245","line":1,"column":15,"nodeType":"210","messageId":"211","endLine":1,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":1,"column":26,"nodeType":"210","messageId":"211","endLine":1,"endColumn":34},{"ruleId":"208","severity":1,"message":"246","line":70,"column":12,"nodeType":"210","messageId":"211","endLine":70,"endColumn":22},{"ruleId":"208","severity":1,"message":"247","line":70,"column":23,"nodeType":"210","messageId":"211","endLine":70,"endColumn":36},{"ruleId":"239","severity":1,"message":"240","line":102,"column":48,"nodeType":"241","messageId":"242","endLine":102,"endColumn":50},{"ruleId":"239","severity":1,"message":"240","line":107,"column":48,"nodeType":"241","messageId":"242","endLine":107,"endColumn":50},{"ruleId":"232","severity":1,"message":"248","line":112,"column":7,"nodeType":"234","endLine":112,"endColumn":21,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":209,"column":29,"nodeType":"252","messageId":"253","endLine":209,"endColumn":47},{"ruleId":"232","severity":1,"message":"254","line":57,"column":7,"nodeType":"234","endLine":57,"endColumn":20,"suggestions":"255"},{"ruleId":"208","severity":1,"message":"245","line":1,"column":25,"nodeType":"210","messageId":"211","endLine":1,"endColumn":34},{"ruleId":"208","severity":1,"message":"256","line":4,"column":9,"nodeType":"210","messageId":"211","endLine":4,"endColumn":15},{"ruleId":"208","severity":1,"message":"257","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":15},{"ruleId":"208","severity":1,"message":"258","line":23,"column":58,"nodeType":"210","messageId":"211","endLine":23,"endColumn":70},{"ruleId":"259","severity":1,"message":"260","line":39,"column":9,"nodeType":"261","messageId":"262","endLine":39,"endColumn":41,"fix":"263"},{"ruleId":"208","severity":1,"message":"264","line":122,"column":29,"nodeType":"210","messageId":"211","endLine":122,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":20,"column":32,"nodeType":"267","messageId":"268","endLine":20,"endColumn":34},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","no-unused-vars","'RadioPage' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Table' is defined but never used.","'data' is assigned a value but never used.","'columns' is assigned a value but never used.","'rest' is assigned a value but never used.","'Option' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isDisabled'. Either include it or remove the dependency array.","ArrayExpression",["269"],"'disabled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initData'. Either include it or remove the dependency array.",["270"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'data' and 'onChange'. Either include them or remove the dependency array.",["271"],"'useEffect' is defined but never used.","'iconRotate' is assigned a value but never used.","'setIconRotate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mode' and 'onChange'. Either include them or remove the dependency array.",["272"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'addListener', 'gridData', and 'gutter'. Either include them or remove the dependency array. You can also do a functional update 'setGridData(g => ...)' if you only need 'gridData' in the 'setGridData' call.",["273"],"'Select' is defined but never used.","'clear' is defined but never used.","'defaultValue' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"sxd-input-wrap-focus\"] found.","Property","unnecessarilyComputedProperty",{"range":"274","text":"275"},"'style' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},[1268,1292],"\"sxd-input-wrap-focus\"","Update the dependencies array to be: [checked, isDisabled]",{"range":"286","text":"287"},"Update the dependencies array to be: [exportvalue, initData]",{"range":"288","text":"289"},"Update the dependencies array to be: [click, data, onChange]",{"range":"290","text":"291"},"Update the dependencies array to be: [mode, onChange, selectedInfo]",{"range":"292","text":"293"},"Update the dependencies array to be: [addListener, gridData, gutter, offsetWidth]",{"range":"294","text":"295"},[961,970],"[checked, isDisabled]",[3314,3327],"[exportvalue, initData]",[3528,3535],"[click, data, onChange]",[3215,3229],"[mode, onChange, selectedInfo]",[1906,1919],"[addListener, gridData, gutter, offsetWidth]"]